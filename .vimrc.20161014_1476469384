" set runtimepath+=~/.vim_runtime

" source ~/.vim_runtime/vimrcs/basic.vim
" source ~/.vim_runtime/vimrcs/filetypes.vim
" source ~/.vim_runtime/vimrcs/plugins_config.vim
" source ~/.vim_runtime/vimrcs/extended.vim

" try
" source ~/.vim_runtime/my_configs.vim
" catch
" endtry
set nocompatible
set hlsearch
filetype on
set backspace=2
" set term=xterm-256color
" syntax on

" Autocompletion

" let g:ycm_min_num_of_chars_for_completion = 1

set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim

" NerdTree
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
autocmd WinEnter * call s:CloseIfOnlyNerdTreeLeft()
highlight VertSplit ctermbg=NONE
highlight VertSplit ctermfg=NONE
let g:NERDTreeWinPos = "right"
" Close all open buffers on entering a window if the only
" buffer that's left is the NERDTree buffer
function! s:CloseIfOnlyNerdTreeLeft()
  if exists("t:NERDTreeBufName")
    if bufwinnr(t:NERDTreeBufName) != -1
      if winnr("$") == 1
        q
      endif
    endif
  endif
endfunction

" nerdtree git

let g:NERDTreeUseSimpleIndicator = 1

set autoread
au CursorHold * if exists("t:NerdTreeBufName") | call <SNR>15_refreshRoot() | endif

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
call vundle#begin()
" let Vundle manage Vundle
" required!
Bundle 'Rip-Rip/clang_complete'
Bundle 'gmarik/vundle'
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Bundle 'bling/vim-airline'
Bundle 'tpope/vim-fugitive'
Bundle 'scrooloose/nerdtree'
Bundle 'klen/python-mode'
Bundle 'jpo/vim-railscasts-theme'
Bundle 'airblade/vim-gitgutter'
Bundle 'https://github.com/freeo/vim-kalisi'
Bundle 'altercation/vim-colors-solarized'
Bundle 'chriskempson/vim-tomorrow-theme'
Bundle 'Valloric/YouCompleteMe'
Bundle 'honza/vim-snippets'
Bundle 'Shougo/neocomplete'
Bundle 'SirVer/ultisnips'
Bundle 'croaker/mustang-vim'
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'garbas/vim-snipmate'
Bundle 'ervandew/supertab'
Bundle 'godlygeek/tabular'
Bundle 'plasticboy/vim-markdown'
Bundle 'ryanoasis/vim-webdevicons'
Bundle 'Xuyuanp/nerdtree-git-plugin'
Bundle 'tpope/vim-surround'
"Bundle 'Townk/vim-autoclose'
Bundle 'jiangmiao/auto-pairs'
Bundle 'vim-scripts/taglist.vim'
Bundle 'ryanoasis/vim-devicons'
Bundle 'flazz/vim-colorschemes'
Bundle 'dracula/vim'
Bundle 'jacoborus/tender'
Bundle 'jedi-vim'
" The bundles you install will be listed here
call vundle#end()

" Determine Filteype
let g:do_filetype = 0
au BufWinEnter,BufAdd * if expand('<afile>') == "" | let g:do_filetype = 1 | endif
au BufEnter * if g:do_filetype | setf python | let g:do_filetype = 0 | endif

filetype plugin indent on
syntax on
" The rest of your config follows here


" If you prefer the YouCompleteMe tip window to close when a selection is
" made, these lines close it on movement in insert mode or when leaving
" insert mode
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

augroup vimrc_autocmds
    autocmd!
    " highlight characters past column 120
    " autocmd FileType python highlight Excess ctermbg=DarkGrey guibg=Black
    " autocmd FileType python match Excess /\%120v.*/
    autocmd FileType python set nowrap
    augroup END

" Powerline setup
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 9
set laststatus=2

" NerdTreee

map <F2> :NERDTreeToggle<CR>


" Python-mode
" Activate rope
" Keys:
" K             Show python docs
" <Ctrl-Space>  Rope autocomplete
" <Ctrl-c>g     Rope goto definition
" <Ctrl-c>d     Rope show documentation
" <Ctrl-c>f     Rope find occurrences
" <Leader>b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" [[            Jump on previous class or function (normal, visual, operator modes)
" ]]            Jump on next class or function (normal, visual, operator modes)
" [M            Jump on previous class or method (normal, visual, operator modes)
" ]M            Jump on next class or method (normal, visual, operator modes)
let g:pymode_rope = 1

" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'

"Linting
let g:pymode_lint = 1
let g:pymode_lint_checker = ["pyflakes","pep8"]
" Auto check on save
let g:pymode_lint_write = 1

" Support virtualenv
let g:pymode_virtualenv = 1

" Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_bind = '<leader>b'

" syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all

" Don't autofold code
let g:pymode_folding = 0

" Use <leader>l to toggle display of whitespace
nmap <leader>l :set list!<CR>
" automatically change window's cwd to file's dir
set autochdir

" I'm prefer spaces to tabs
set tabstop=4
set shiftwidth=4
set expandtab

" more subtle popup colors
if has ('gui_running')
    highlight Pmenu guibg=#cccccc gui=bold
endif

" Theme
"let g:airline_theme='tender'
let g:airline_powerline_fonts = 1
" colorscheme kalisi
set background=dark
" solarized options
let g:solarized_visibility = "high"
let g:solarized_contrast = "high"
colorscheme tender
"colorscheme mustang
let g:solarized_termcolors=256
let &t_Co=256
"color dracula

" Snippets
"" YouCompleteMe
let g:ycm_key_list_previous_completion=['<Up>']
"let g:ycm_server_keep_logfiles = 1
"let g:ycm_server_log_level = 'debug'
" set g:ycm_server_keep_logfiles
let g:ycm_filetype_specific_completion_to_disable = { 'python' : 1  }
let g:ycm_filetype_blacklist = { 'python' : 1  }

"" Ultisnips

let g:UltiSnipsExpandTrigger="<s-tab>"
let g:UltiSnipsListSnippets="<c-s-tab>"

" Markdown settings


let g:vim_markdown_folding_disabled=1
let g:vim_markdown_no_default_key_mappings=1
let g:vim_markdown_frontmatter=1

" devIcon

let g:airline_powerline_fonts=1
let g:webdevicons_enable = 1
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_conceal_nerdtree_brackets = 0
" set guifont=Droid\ Sans\ Mono\ for\ Powerline\ Plus\ Nerd\ File\ Types:h11
" set guifont=Inconsolata\ for\ Powerline:h15
set encoding=utf-8


" GitGutter
let g:gitgutter_avoid_cmd_prompt_on_windows = 0
highlight clear SignColumn
highlight GitGutterAdd ctermfg=green
highlight GitGutterChange ctermfg=yellow
highlight GitGutterDelete ctermfg=red
highlight GitGutterChangeDelete ctermfg=yellow



" Syntax for multiple tag files are
" set tags=/my/dir1/tags, /my/dir2/tags
set tags=tags;$HOME/.vim/tags/

" TagList Plugin Configuration
let Tlist_Ctags_Cmd='/usr/local/Cellar/ctags/5.8_1/bin/ctags'
let Tlist_GainFocus_On_ToggleOpen = 1
let Tlist_Close_On_Select = 0
let Tlist_Use_Right_Window = 0
let Tlist_File_Fold_Auto_Close = 1
let Tlist_Show_One_File = 1
let Tlist_Compact_Format = 1
let Tlist_Process_File_Always = 1
map <F7> :TlistToggle<CR>

" ActivatAddons vim-snippets snipmate 
